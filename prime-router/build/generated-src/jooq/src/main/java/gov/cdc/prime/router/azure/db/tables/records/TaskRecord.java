/*
 * This file is generated by jOOQ.
 */
package gov.cdc.prime.router.azure.db.tables.records;


import gov.cdc.prime.router.azure.db.enums.TaskAction;
import gov.cdc.prime.router.azure.db.tables.Task;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record15<UUID, TaskAction, OffsetDateTime, String, String, Integer, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, JSON> {

    private static final long serialVersionUID = 1259531506;

    /**
     * Setter for <code>public.task.report_id</code>.
     */
    public TaskRecord setReportId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.task.report_id</code>.
     */
    public UUID getReportId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.task.next_action</code>.
     */
    public TaskRecord setNextAction(TaskAction value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.task.next_action</code>.
     */
    public TaskAction getNextAction() {
        return (TaskAction) get(1);
    }

    /**
     * Setter for <code>public.task.next_action_at</code>.
     */
    public TaskRecord setNextActionAt(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.task.next_action_at</code>.
     */
    public OffsetDateTime getNextActionAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.task.schema_name</code>.
     */
    public TaskRecord setSchemaName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.task.schema_name</code>.
     */
    public String getSchemaName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.task.receiver_name</code>.
     */
    public TaskRecord setReceiverName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.task.receiver_name</code>.
     */
    public String getReceiverName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.task.item_count</code>.
     */
    public TaskRecord setItemCount(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.task.item_count</code>.
     */
    public Integer getItemCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.task.body_format</code>.
     */
    public TaskRecord setBodyFormat(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.task.body_format</code>.
     */
    public String getBodyFormat() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.task.body_url</code>.
     */
    public TaskRecord setBodyUrl(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.task.body_url</code>.
     */
    public String getBodyUrl() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.task.created_at</code>.
     */
    public TaskRecord setCreatedAt(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.task.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>public.task.translated_at</code>.
     */
    public TaskRecord setTranslatedAt(OffsetDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.task.translated_at</code>.
     */
    public OffsetDateTime getTranslatedAt() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.task.batched_at</code>.
     */
    public TaskRecord setBatchedAt(OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.task.batched_at</code>.
     */
    public OffsetDateTime getBatchedAt() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>public.task.sent_at</code>.
     */
    public TaskRecord setSentAt(OffsetDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.task.sent_at</code>.
     */
    public OffsetDateTime getSentAt() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for <code>public.task.wiped_at</code>.
     */
    public TaskRecord setWipedAt(OffsetDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.task.wiped_at</code>.
     */
    public OffsetDateTime getWipedAt() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for <code>public.task.errored_at</code>.
     */
    public TaskRecord setErroredAt(OffsetDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.task.errored_at</code>.
     */
    public OffsetDateTime getErroredAt() {
        return (OffsetDateTime) get(13);
    }

    /**
     * Setter for <code>public.task.retry_token</code>.
     */
    public TaskRecord setRetryToken(JSON value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.task.retry_token</code>.
     */
    public JSON getRetryToken() {
        return (JSON) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<UUID, TaskAction, OffsetDateTime, String, String, Integer, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, JSON> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<UUID, TaskAction, OffsetDateTime, String, String, Integer, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, JSON> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Task.TASK.REPORT_ID;
    }

    @Override
    public Field<TaskAction> field2() {
        return Task.TASK.NEXT_ACTION;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return Task.TASK.NEXT_ACTION_AT;
    }

    @Override
    public Field<String> field4() {
        return Task.TASK.SCHEMA_NAME;
    }

    @Override
    public Field<String> field5() {
        return Task.TASK.RECEIVER_NAME;
    }

    @Override
    public Field<Integer> field6() {
        return Task.TASK.ITEM_COUNT;
    }

    @Override
    public Field<String> field7() {
        return Task.TASK.BODY_FORMAT;
    }

    @Override
    public Field<String> field8() {
        return Task.TASK.BODY_URL;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return Task.TASK.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field10() {
        return Task.TASK.TRANSLATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return Task.TASK.BATCHED_AT;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return Task.TASK.SENT_AT;
    }

    @Override
    public Field<OffsetDateTime> field13() {
        return Task.TASK.WIPED_AT;
    }

    @Override
    public Field<OffsetDateTime> field14() {
        return Task.TASK.ERRORED_AT;
    }

    @Override
    public Field<JSON> field15() {
        return Task.TASK.RETRY_TOKEN;
    }

    @Override
    public UUID component1() {
        return getReportId();
    }

    @Override
    public TaskAction component2() {
        return getNextAction();
    }

    @Override
    public OffsetDateTime component3() {
        return getNextActionAt();
    }

    @Override
    public String component4() {
        return getSchemaName();
    }

    @Override
    public String component5() {
        return getReceiverName();
    }

    @Override
    public Integer component6() {
        return getItemCount();
    }

    @Override
    public String component7() {
        return getBodyFormat();
    }

    @Override
    public String component8() {
        return getBodyUrl();
    }

    @Override
    public OffsetDateTime component9() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component10() {
        return getTranslatedAt();
    }

    @Override
    public OffsetDateTime component11() {
        return getBatchedAt();
    }

    @Override
    public OffsetDateTime component12() {
        return getSentAt();
    }

    @Override
    public OffsetDateTime component13() {
        return getWipedAt();
    }

    @Override
    public OffsetDateTime component14() {
        return getErroredAt();
    }

    @Override
    public JSON component15() {
        return getRetryToken();
    }

    @Override
    public UUID value1() {
        return getReportId();
    }

    @Override
    public TaskAction value2() {
        return getNextAction();
    }

    @Override
    public OffsetDateTime value3() {
        return getNextActionAt();
    }

    @Override
    public String value4() {
        return getSchemaName();
    }

    @Override
    public String value5() {
        return getReceiverName();
    }

    @Override
    public Integer value6() {
        return getItemCount();
    }

    @Override
    public String value7() {
        return getBodyFormat();
    }

    @Override
    public String value8() {
        return getBodyUrl();
    }

    @Override
    public OffsetDateTime value9() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value10() {
        return getTranslatedAt();
    }

    @Override
    public OffsetDateTime value11() {
        return getBatchedAt();
    }

    @Override
    public OffsetDateTime value12() {
        return getSentAt();
    }

    @Override
    public OffsetDateTime value13() {
        return getWipedAt();
    }

    @Override
    public OffsetDateTime value14() {
        return getErroredAt();
    }

    @Override
    public JSON value15() {
        return getRetryToken();
    }

    @Override
    public TaskRecord value1(UUID value) {
        setReportId(value);
        return this;
    }

    @Override
    public TaskRecord value2(TaskAction value) {
        setNextAction(value);
        return this;
    }

    @Override
    public TaskRecord value3(OffsetDateTime value) {
        setNextActionAt(value);
        return this;
    }

    @Override
    public TaskRecord value4(String value) {
        setSchemaName(value);
        return this;
    }

    @Override
    public TaskRecord value5(String value) {
        setReceiverName(value);
        return this;
    }

    @Override
    public TaskRecord value6(Integer value) {
        setItemCount(value);
        return this;
    }

    @Override
    public TaskRecord value7(String value) {
        setBodyFormat(value);
        return this;
    }

    @Override
    public TaskRecord value8(String value) {
        setBodyUrl(value);
        return this;
    }

    @Override
    public TaskRecord value9(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TaskRecord value10(OffsetDateTime value) {
        setTranslatedAt(value);
        return this;
    }

    @Override
    public TaskRecord value11(OffsetDateTime value) {
        setBatchedAt(value);
        return this;
    }

    @Override
    public TaskRecord value12(OffsetDateTime value) {
        setSentAt(value);
        return this;
    }

    @Override
    public TaskRecord value13(OffsetDateTime value) {
        setWipedAt(value);
        return this;
    }

    @Override
    public TaskRecord value14(OffsetDateTime value) {
        setErroredAt(value);
        return this;
    }

    @Override
    public TaskRecord value15(JSON value) {
        setRetryToken(value);
        return this;
    }

    @Override
    public TaskRecord values(UUID value1, TaskAction value2, OffsetDateTime value3, String value4, String value5, Integer value6, String value7, String value8, OffsetDateTime value9, OffsetDateTime value10, OffsetDateTime value11, OffsetDateTime value12, OffsetDateTime value13, OffsetDateTime value14, JSON value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(UUID reportId, TaskAction nextAction, OffsetDateTime nextActionAt, String schemaName, String receiverName, Integer itemCount, String bodyFormat, String bodyUrl, OffsetDateTime createdAt, OffsetDateTime translatedAt, OffsetDateTime batchedAt, OffsetDateTime sentAt, OffsetDateTime wipedAt, OffsetDateTime erroredAt, JSON retryToken) {
        super(Task.TASK);

        set(0, reportId);
        set(1, nextAction);
        set(2, nextActionAt);
        set(3, schemaName);
        set(4, receiverName);
        set(5, itemCount);
        set(6, bodyFormat);
        set(7, bodyUrl);
        set(8, createdAt);
        set(9, translatedAt);
        set(10, batchedAt);
        set(11, sentAt);
        set(12, wipedAt);
        set(13, erroredAt);
        set(14, retryToken);
    }
}
