/*
 * This file is generated by jOOQ.
 */
package gov.cdc.prime.router.azure.db.tables;


import gov.cdc.prime.router.azure.db.Keys;
import gov.cdc.prime.router.azure.db.Public;
import gov.cdc.prime.router.azure.db.enums.TaskAction;
import gov.cdc.prime.router.azure.db.tables.records.ActionRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Action extends TableImpl<ActionRecord> {

    private static final long serialVersionUID = 1631638749;

    /**
     * The reference instance of <code>public.action</code>
     */
    public static final Action ACTION = new Action();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActionRecord> getRecordType() {
        return ActionRecord.class;
    }

    /**
     * The column <code>public.action.action_id</code>.
     */
    public final TableField<ActionRecord, Long> ACTION_ID = createField(DSL.name("action_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('action_action_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.action.action_name</code>.
     */
    public final TableField<ActionRecord, TaskAction> ACTION_NAME = createField(DSL.name("action_name"), org.jooq.impl.SQLDataType.VARCHAR.asEnumDataType(gov.cdc.prime.router.azure.db.enums.TaskAction.class), this, "");

    /**
     * The column <code>public.action.action_params</code>.
     */
    public final TableField<ActionRecord, String> ACTION_PARAMS = createField(DSL.name("action_params"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>public.action.action_result</code>.
     */
    public final TableField<ActionRecord, String> ACTION_RESULT = createField(DSL.name("action_result"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>public.action.created_at</code>.
     */
    public final TableField<ActionRecord, OffsetDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>public.action</code> table reference
     */
    public Action() {
        this(DSL.name("action"), null);
    }

    /**
     * Create an aliased <code>public.action</code> table reference
     */
    public Action(String alias) {
        this(DSL.name(alias), ACTION);
    }

    /**
     * Create an aliased <code>public.action</code> table reference
     */
    public Action(Name alias) {
        this(alias, ACTION);
    }

    private Action(Name alias, Table<ActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Action(Name alias, Table<ActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Action(Table<O> child, ForeignKey<O, ActionRecord> key) {
        super(child, key, ACTION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<ActionRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACTION;
    }

    @Override
    public UniqueKey<ActionRecord> getPrimaryKey() {
        return Keys.ACTION_PKEY;
    }

    @Override
    public List<UniqueKey<ActionRecord>> getKeys() {
        return Arrays.<UniqueKey<ActionRecord>>asList(Keys.ACTION_PKEY);
    }

    @Override
    public Action as(String alias) {
        return new Action(DSL.name(alias), this);
    }

    @Override
    public Action as(Name alias) {
        return new Action(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Action rename(String name) {
        return new Action(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Action rename(Name name) {
        return new Action(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, TaskAction, String, String, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
