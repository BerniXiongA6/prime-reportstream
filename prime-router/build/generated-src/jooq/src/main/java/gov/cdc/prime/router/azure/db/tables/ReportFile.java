/*
 * This file is generated by jOOQ.
 */
package gov.cdc.prime.router.azure.db.tables;


import gov.cdc.prime.router.azure.db.Indexes;
import gov.cdc.prime.router.azure.db.Keys;
import gov.cdc.prime.router.azure.db.Public;
import gov.cdc.prime.router.azure.db.enums.TaskAction;
import gov.cdc.prime.router.azure.db.tables.records.ReportFileRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row20;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportFile extends TableImpl<ReportFileRecord> {

    private static final long serialVersionUID = 1793242669;

    /**
     * The reference instance of <code>public.report_file</code>
     */
    public static final ReportFile REPORT_FILE = new ReportFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportFileRecord> getRecordType() {
        return ReportFileRecord.class;
    }

    /**
     * The column <code>public.report_file.report_id</code>.
     */
    public final TableField<ReportFileRecord, UUID> REPORT_ID = createField(DSL.name("report_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.report_file.action_id</code>.
     */
    public final TableField<ReportFileRecord, Long> ACTION_ID = createField(DSL.name("action_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.report_file.next_action</code>.
     */
    public final TableField<ReportFileRecord, TaskAction> NEXT_ACTION = createField(DSL.name("next_action"), org.jooq.impl.SQLDataType.VARCHAR.asEnumDataType(gov.cdc.prime.router.azure.db.enums.TaskAction.class), this, "");

    /**
     * The column <code>public.report_file.next_action_at</code>.
     */
    public final TableField<ReportFileRecord, OffsetDateTime> NEXT_ACTION_AT = createField(DSL.name("next_action_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.report_file.sending_org</code>.
     */
    public final TableField<ReportFileRecord, String> SENDING_ORG = createField(DSL.name("sending_org"), org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * The column <code>public.report_file.sending_org_client</code>.
     */
    public final TableField<ReportFileRecord, String> SENDING_ORG_CLIENT = createField(DSL.name("sending_org_client"), org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * The column <code>public.report_file.receiving_org</code>.
     */
    public final TableField<ReportFileRecord, String> RECEIVING_ORG = createField(DSL.name("receiving_org"), org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * The column <code>public.report_file.receiving_org_svc</code>.
     */
    public final TableField<ReportFileRecord, String> RECEIVING_ORG_SVC = createField(DSL.name("receiving_org_svc"), org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * The column <code>public.report_file.transport_params</code>.
     */
    public final TableField<ReportFileRecord, String> TRANSPORT_PARAMS = createField(DSL.name("transport_params"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>public.report_file.transport_result</code>.
     */
    public final TableField<ReportFileRecord, String> TRANSPORT_RESULT = createField(DSL.name("transport_result"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>public.report_file.schema_name</code>.
     */
    public final TableField<ReportFileRecord, String> SCHEMA_NAME = createField(DSL.name("schema_name"), org.jooq.impl.SQLDataType.VARCHAR(63).nullable(false), this, "");

    /**
     * The column <code>public.report_file.schema_topic</code>.
     */
    public final TableField<ReportFileRecord, String> SCHEMA_TOPIC = createField(DSL.name("schema_topic"), org.jooq.impl.SQLDataType.VARCHAR(63).nullable(false), this, "");

    /**
     * The column <code>public.report_file.body_url</code>.
     */
    public final TableField<ReportFileRecord, String> BODY_URL = createField(DSL.name("body_url"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>public.report_file.external_name</code>.
     */
    public final TableField<ReportFileRecord, String> EXTERNAL_NAME = createField(DSL.name("external_name"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>public.report_file.body_format</code>.
     */
    public final TableField<ReportFileRecord, String> BODY_FORMAT = createField(DSL.name("body_format"), org.jooq.impl.SQLDataType.VARCHAR(63).nullable(false), this, "");

    /**
     * The column <code>public.report_file.blob_digest</code>.
     */
    public final TableField<ReportFileRecord, byte[]> BLOB_DIGEST = createField(DSL.name("blob_digest"), org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>public.report_file.item_count</code>.
     */
    public final TableField<ReportFileRecord, Integer> ITEM_COUNT = createField(DSL.name("item_count"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.report_file.wiped_at</code>.
     */
    public final TableField<ReportFileRecord, OffsetDateTime> WIPED_AT = createField(DSL.name("wiped_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

    /**
     * The column <code>public.report_file.created_at</code>.
     */
    public final TableField<ReportFileRecord, OffsetDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * The column <code>public.report_file.downloaded_by</code>.
     */
    public final TableField<ReportFileRecord, String> DOWNLOADED_BY = createField(DSL.name("downloaded_by"), org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * Create a <code>public.report_file</code> table reference
     */
    public ReportFile() {
        this(DSL.name("report_file"), null);
    }

    /**
     * Create an aliased <code>public.report_file</code> table reference
     */
    public ReportFile(String alias) {
        this(DSL.name(alias), REPORT_FILE);
    }

    /**
     * Create an aliased <code>public.report_file</code> table reference
     */
    public ReportFile(Name alias) {
        this(alias, REPORT_FILE);
    }

    private ReportFile(Name alias, Table<ReportFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportFile(Name alias, Table<ReportFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ReportFile(Table<O> child, ForeignKey<O, ReportFileRecord> key) {
        super(child, key, REPORT_FILE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REPORT_FILE_NEXT_ACTION_IDX);
    }

    @Override
    public UniqueKey<ReportFileRecord> getPrimaryKey() {
        return Keys.REPORT_FILE_PKEY;
    }

    @Override
    public List<UniqueKey<ReportFileRecord>> getKeys() {
        return Arrays.<UniqueKey<ReportFileRecord>>asList(Keys.REPORT_FILE_PKEY, Keys.REPORT_FILE_BODY_URL_KEY);
    }

    @Override
    public List<ForeignKey<ReportFileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReportFileRecord, ?>>asList(Keys.REPORT_FILE__REPORT_FILE_ACTION_ID_FKEY);
    }

    public Action action() {
        return new Action(this, Keys.REPORT_FILE__REPORT_FILE_ACTION_ID_FKEY);
    }

    @Override
    public ReportFile as(String alias) {
        return new ReportFile(DSL.name(alias), this);
    }

    @Override
    public ReportFile as(Name alias) {
        return new ReportFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportFile rename(String name) {
        return new ReportFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportFile rename(Name name) {
        return new ReportFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row20 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row20<UUID, Long, TaskAction, OffsetDateTime, String, String, String, String, String, String, String, String, String, String, String, byte[], Integer, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }
}
