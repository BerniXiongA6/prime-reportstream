/*
 * This file is generated by jOOQ.
 */
package gov.cdc.prime.router.azure.db.tables;


import gov.cdc.prime.router.azure.db.Indexes;
import gov.cdc.prime.router.azure.db.Keys;
import gov.cdc.prime.router.azure.db.Public;
import gov.cdc.prime.router.azure.db.tables.records.ItemLineageRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemLineage extends TableImpl<ItemLineageRecord> {

    private static final long serialVersionUID = 2087065263;

    /**
     * The reference instance of <code>public.item_lineage</code>
     */
    public static final ItemLineage ITEM_LINEAGE = new ItemLineage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemLineageRecord> getRecordType() {
        return ItemLineageRecord.class;
    }

    /**
     * The column <code>public.item_lineage.item_lineage_id</code>.
     */
    public final TableField<ItemLineageRecord, Long> ITEM_LINEAGE_ID = createField(DSL.name("item_lineage_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('item_lineage_item_lineage_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.item_lineage.parent_report_id</code>.
     */
    public final TableField<ItemLineageRecord, UUID> PARENT_REPORT_ID = createField(DSL.name("parent_report_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.item_lineage.parent_index</code>.
     */
    public final TableField<ItemLineageRecord, Integer> PARENT_INDEX = createField(DSL.name("parent_index"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.item_lineage.child_report_id</code>.
     */
    public final TableField<ItemLineageRecord, UUID> CHILD_REPORT_ID = createField(DSL.name("child_report_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.item_lineage.child_index</code>.
     */
    public final TableField<ItemLineageRecord, Integer> CHILD_INDEX = createField(DSL.name("child_index"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.item_lineage.tracking_id</code>.
     */
    public final TableField<ItemLineageRecord, String> TRACKING_ID = createField(DSL.name("tracking_id"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.item_lineage.transport_result</code>.
     */
    public final TableField<ItemLineageRecord, String> TRANSPORT_RESULT = createField(DSL.name("transport_result"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>public.item_lineage.created_at</code>.
     */
    public final TableField<ItemLineageRecord, OffsetDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>public.item_lineage</code> table reference
     */
    public ItemLineage() {
        this(DSL.name("item_lineage"), null);
    }

    /**
     * Create an aliased <code>public.item_lineage</code> table reference
     */
    public ItemLineage(String alias) {
        this(DSL.name(alias), ITEM_LINEAGE);
    }

    /**
     * Create an aliased <code>public.item_lineage</code> table reference
     */
    public ItemLineage(Name alias) {
        this(alias, ITEM_LINEAGE);
    }

    private ItemLineage(Name alias, Table<ItemLineageRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemLineage(Name alias, Table<ItemLineageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ItemLineage(Table<O> child, ForeignKey<O, ItemLineageRecord> key) {
        super(child, key, ITEM_LINEAGE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEM_LINEAGE_CHILD_IDX, Indexes.ITEM_LINEAGE_PARENT_IDX, Indexes.ITEM_LINEAGE_TRACKING_ID_IDX);
    }

    @Override
    public Identity<ItemLineageRecord, Long> getIdentity() {
        return Keys.IDENTITY_ITEM_LINEAGE;
    }

    @Override
    public UniqueKey<ItemLineageRecord> getPrimaryKey() {
        return Keys.ITEM_LINEAGE_PKEY;
    }

    @Override
    public List<UniqueKey<ItemLineageRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemLineageRecord>>asList(Keys.ITEM_LINEAGE_PKEY);
    }

    @Override
    public List<ForeignKey<ItemLineageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemLineageRecord, ?>>asList(Keys.ITEM_LINEAGE__ITEM_LINEAGE_PARENT_REPORT_ID_FKEY, Keys.ITEM_LINEAGE__ITEM_LINEAGE_CHILD_REPORT_ID_FKEY);
    }

    public ReportFile itemLineageParentReportIdFkey() {
        return new ReportFile(this, Keys.ITEM_LINEAGE__ITEM_LINEAGE_PARENT_REPORT_ID_FKEY);
    }

    public ReportFile itemLineageChildReportIdFkey() {
        return new ReportFile(this, Keys.ITEM_LINEAGE__ITEM_LINEAGE_CHILD_REPORT_ID_FKEY);
    }

    @Override
    public ItemLineage as(String alias) {
        return new ItemLineage(DSL.name(alias), this);
    }

    @Override
    public ItemLineage as(Name alias) {
        return new ItemLineage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemLineage rename(String name) {
        return new ItemLineage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemLineage rename(Name name) {
        return new ItemLineage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, UUID, Integer, UUID, Integer, String, String, OffsetDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
