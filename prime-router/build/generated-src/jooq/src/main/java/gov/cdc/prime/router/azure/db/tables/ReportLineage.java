/*
 * This file is generated by jOOQ.
 */
package gov.cdc.prime.router.azure.db.tables;


import gov.cdc.prime.router.azure.db.Keys;
import gov.cdc.prime.router.azure.db.Public;
import gov.cdc.prime.router.azure.db.tables.records.ReportLineageRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportLineage extends TableImpl<ReportLineageRecord> {

    private static final long serialVersionUID = -1204989369;

    /**
     * The reference instance of <code>public.report_lineage</code>
     */
    public static final ReportLineage REPORT_LINEAGE = new ReportLineage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportLineageRecord> getRecordType() {
        return ReportLineageRecord.class;
    }

    /**
     * The column <code>public.report_lineage.report_lineage_id</code>.
     */
    public final TableField<ReportLineageRecord, Long> REPORT_LINEAGE_ID = createField(DSL.name("report_lineage_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('report_lineage_report_lineage_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.report_lineage.action_id</code>.
     */
    public final TableField<ReportLineageRecord, Long> ACTION_ID = createField(DSL.name("action_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.report_lineage.parent_report_id</code>.
     */
    public final TableField<ReportLineageRecord, UUID> PARENT_REPORT_ID = createField(DSL.name("parent_report_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.report_lineage.child_report_id</code>.
     */
    public final TableField<ReportLineageRecord, UUID> CHILD_REPORT_ID = createField(DSL.name("child_report_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.report_lineage.created_at</code>.
     */
    public final TableField<ReportLineageRecord, OffsetDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>public.report_lineage</code> table reference
     */
    public ReportLineage() {
        this(DSL.name("report_lineage"), null);
    }

    /**
     * Create an aliased <code>public.report_lineage</code> table reference
     */
    public ReportLineage(String alias) {
        this(DSL.name(alias), REPORT_LINEAGE);
    }

    /**
     * Create an aliased <code>public.report_lineage</code> table reference
     */
    public ReportLineage(Name alias) {
        this(alias, REPORT_LINEAGE);
    }

    private ReportLineage(Name alias, Table<ReportLineageRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportLineage(Name alias, Table<ReportLineageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ReportLineage(Table<O> child, ForeignKey<O, ReportLineageRecord> key) {
        super(child, key, REPORT_LINEAGE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<ReportLineageRecord, Long> getIdentity() {
        return Keys.IDENTITY_REPORT_LINEAGE;
    }

    @Override
    public UniqueKey<ReportLineageRecord> getPrimaryKey() {
        return Keys.REPORT_LINEAGE_PKEY;
    }

    @Override
    public List<UniqueKey<ReportLineageRecord>> getKeys() {
        return Arrays.<UniqueKey<ReportLineageRecord>>asList(Keys.REPORT_LINEAGE_PKEY);
    }

    @Override
    public List<ForeignKey<ReportLineageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReportLineageRecord, ?>>asList(Keys.REPORT_LINEAGE__REPORT_LINEAGE_ACTION_ID_FKEY, Keys.REPORT_LINEAGE__REPORT_LINEAGE_PARENT_REPORT_ID_FKEY, Keys.REPORT_LINEAGE__REPORT_LINEAGE_CHILD_REPORT_ID_FKEY);
    }

    public Action action() {
        return new Action(this, Keys.REPORT_LINEAGE__REPORT_LINEAGE_ACTION_ID_FKEY);
    }

    public ReportFile reportLineageParentReportIdFkey() {
        return new ReportFile(this, Keys.REPORT_LINEAGE__REPORT_LINEAGE_PARENT_REPORT_ID_FKEY);
    }

    public ReportFile reportLineageChildReportIdFkey() {
        return new ReportFile(this, Keys.REPORT_LINEAGE__REPORT_LINEAGE_CHILD_REPORT_ID_FKEY);
    }

    @Override
    public ReportLineage as(String alias) {
        return new ReportLineage(DSL.name(alias), this);
    }

    @Override
    public ReportLineage as(Name alias) {
        return new ReportLineage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportLineage rename(String name) {
        return new ReportLineage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportLineage rename(Name name) {
        return new ReportLineage(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, UUID, UUID, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
